---
import { date } from "astro:schema";
import pkg from "hash.js"; // Correct named import
const { sha256 } = pkg;

if (Astro.request.method === "POST") {
  const userIP = Astro.clientAddress;
  const agent = Astro.request.headers.get("user-agent");
  console.log(agent);
  const data = await Astro.request.formData();
  const name = data.get("name");
  const firstName = name?.toString().split(" ")[0];
  const ct = sha256() // Directly use sha256()
    .update(data.get("city-lwr")?.toString())
    .digest("hex");
  const st = sha256().update(data.get("state")?.toString()).digest("hex"); // Directly use sha256()
  const country = sha256() // Directly use sha256()
    .update(data.get("countryName")?.toString())
    .digest("hex");
  const fn = sha256() // Directly use sha256()
    .update(firstName?.toLowerCase() || "")
    .digest("hex");

  const lastName = name?.toString().slice(name?.toString().indexOf(" ") + 1);
  const ln = sha256() // Directly use sha256()
    .update(lastName?.toLowerCase() || "")
    .digest("hex");

  const email = data.get("email");
  const em = sha256() // Directly use sha256()
    .update(email?.toString().trim().toLowerCase() || "")
    .digest("hex");

  const phoneac = data.get("phoneac");
  const phone = data.get("phone");
  const intlPhone = data.get("intl-phone");
  const intlPhoneSanitized = intlPhone?.toString().replace("+", "");
  const ph = sha256().update(intlPhoneSanitized).digest("hex"); // Directly use sha256()
  const source = data.get("source");
  const location = data.get("location");
  const clientID = data.get("clientID");
  const fields: { [key: string]: any } = {};
  data.forEach((value, key) => {
    fields[key] = value;
  });

  // Do something with the data
  // Redirect to a thank you page
  // return Astro.redirect(
  //   // `https://pay.hotmart.com/O84147403X?off=32k5pbhv&checkoutMode=10&sck=${source}&email=${email}&name=${name}&phonenumber=${phoneac}`
  //   `/thank-you`
  // );
  return new Response(
    JSON.stringify({
      ...fields,
      firstName,
      lastName,
      fn,
      ln,
      em,
      ph,
      ct,
      st,
      country,
      client_user_agent: agent,

      client_ip_address: userIP,
    }),
    {
      headers: {
        "content-type": "text/plain",
      },
    }
  );
}
---
